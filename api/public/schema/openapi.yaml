openapi: 3.0.2
info:
  title: 'Locatie Catalogus'
  version: V1.0
  description: |
    API Details
    - Component: Locatie Catalogus
    - Reference: lc
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/locatiecatalogus) / [zip](https://github.com/ConductionNL/locatiecatalogus/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/lc-php) 
    - Datamodel: [postman](/schema/lc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [modelio (zip)](/schema/Datamodel_Modelio.zip) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /accommodation_properties:
    get:
      tags:
        - AccommodationProperty
      operationId: getAccommodationPropertyCollection
      summary: 'Retrieves the collection of AccommodationProperty resources.'
      responses:
        200:
          description: 'AccommodationProperty collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AccommodationProperty:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AccommodationProperty:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[value]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: value
          in: query
          required: false
          schema:
            type: string
        -
          name: 'value[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AccommodationProperty
      operationId: postAccommodationPropertyCollection
      summary: 'Creates a AccommodationProperty resource.'
      responses:
        201:
          description: 'AccommodationProperty resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccommodationProperty:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
          links:
            GetAccommodationPropertyItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAccommodationPropertyItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /accommodation_properties/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AccommodationProperty:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
        description: 'The new AccommodationProperty resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/accommodation_properties/{id}':
    get:
      tags:
        - AccommodationProperty
      operationId: getAccommodationPropertyItem
      summary: 'Retrieves a AccommodationProperty resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AccommodationProperty resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccommodationProperty:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - AccommodationProperty
      operationId: putAccommodationPropertyItem
      summary: 'Replaces the AccommodationProperty resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AccommodationProperty resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccommodationProperty:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AccommodationProperty:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
        description: 'The updated AccommodationProperty resource'
    delete:
      tags:
        - AccommodationProperty
      operationId: deleteAccommodationPropertyItem
      summary: 'Removes the AccommodationProperty resource.'
      responses:
        204:
          description: 'AccommodationProperty resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /accommodations:
    get:
      tags:
        - Accommodation
      operationId: getAccommodationCollection
      summary: 'Retrieves the collection of Accommodation resources.'
      responses:
        200:
          description: 'Accommodation collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Accommodation:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Accommodation:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
      parameters:
        -
          name: petsAllowed
          in: query
          required: false
          schema:
            type: boolean
        -
          name: wheelchairAccessible
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[accommodationCategory]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[floorSize]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[petsAllowed]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[wheelchairAccessible]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[numberOfBathroomsTotal]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[floorLevel]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maximumAttendeeCapacity]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[product]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: accommodationCategory
          in: query
          required: false
          schema:
            type: string
        -
          name: 'accommodationCategory[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: floorSize
          in: query
          required: false
          schema:
            type: string
        -
          name: 'floorSize[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: petsAllowed
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'petsAllowed[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: wheelchairAccessible
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'wheelchairAccessible[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: numberOfBathroomsTotal
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'numberOfBathroomsTotal[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: floorLevel
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'floorLevel[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: maximumAttendeeCapacity
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'maximumAttendeeCapacity[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: product
          in: query
          required: false
          schema:
            type: string
        -
          name: 'product[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Accommodation
      operationId: postAccommodationCollection
      summary: 'Creates a Accommodation resource.'
      responses:
        201:
          description: 'Accommodation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Accommodation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Accommodation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
          links:
            GetAccommodationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAccommodationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /accommodations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Accommodation:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Accommodation:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
        description: 'The new Accommodation resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/accommodations/{id}':
    get:
      tags:
        - Accommodation
      operationId: getAccommodationItem
      summary: 'Retrieves a Accommodation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Accommodation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Accommodation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Accommodation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Accommodation
      operationId: putAccommodationItem
      summary: 'Replaces the Accommodation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Accommodation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Accommodation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Accommodation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Accommodation:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Accommodation:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
        description: 'The updated Accommodation resource'
    delete:
      tags:
        - Accommodation
      operationId: deleteAccommodationItem
      summary: 'Removes the Accommodation resource.'
      responses:
        204:
          description: 'Accommodation resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/accomodations/{id}/audit_trail':
    get:
      tags:
        - Accommodation
      operationId: get_audit_trailAccommodationItem
      summary: 'Retrieves a Accommodation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Accommodation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Accommodation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Accommodation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/accomodations/{id}/change_log':
    get:
      tags:
        - Accommodation
      operationId: get_change_logsAccommodationItem
      summary: 'Retrieves a Accommodation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Accommodation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Accommodation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Accommodation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /place_properties:
    get:
      tags:
        - PlaceProperty
      operationId: getPlacePropertyCollection
      summary: 'Retrieves the collection of PlaceProperty resources.'
      responses:
        200:
          description: 'PlaceProperty collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/PlaceProperty:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/PlaceProperty:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[value]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: value
          in: query
          required: false
          schema:
            type: string
        -
          name: 'value[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - PlaceProperty
      operationId: postPlacePropertyCollection
      summary: 'Creates a PlaceProperty resource.'
      responses:
        201:
          description: 'PlaceProperty resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PlaceProperty:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
          links:
            GetPlacePropertyItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPlacePropertyItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /place_properties/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/PlaceProperty:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
        description: 'The new PlaceProperty resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/place_properties/{id}':
    get:
      tags:
        - PlaceProperty
      operationId: getPlacePropertyItem
      summary: 'Retrieves a PlaceProperty resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'PlaceProperty resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PlaceProperty:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - PlaceProperty
      operationId: putPlacePropertyItem
      summary: 'Replaces the PlaceProperty resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'PlaceProperty resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PlaceProperty:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/PlaceProperty:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
        description: 'The updated PlaceProperty resource'
    delete:
      tags:
        - PlaceProperty
      operationId: deletePlacePropertyItem
      summary: 'Removes the PlaceProperty resource.'
      responses:
        204:
          description: 'PlaceProperty resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /places:
    get:
      tags:
        - Place
      operationId: getPlaceCollection
      summary: 'Retrieves the collection of Place resources.'
      responses:
        200:
          description: 'Place collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Place:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Place:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
      parameters:
        -
          name: publicAccess
          in: query
          required: false
          schema:
            type: boolean
        -
          name: smokingAllowed
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[bagId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[url]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[telephone]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[logo]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[photo]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[hasMap]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[publicAccess]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[smokingAllowed]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[openingTime]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[closingTime]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'openingTime[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'openingTime[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'openingTime[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'openingTime[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'closingTime[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'closingTime[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'closingTime[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'closingTime[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: bagId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'bagId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: url
          in: query
          required: false
          schema:
            type: string
        -
          name: 'url[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: telephone
          in: query
          required: false
          schema:
            type: string
        -
          name: 'telephone[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: logo
          in: query
          required: false
          schema:
            type: string
        -
          name: 'logo[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: photo
          in: query
          required: false
          schema:
            type: string
        -
          name: 'photo[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: hasMap
          in: query
          required: false
          schema:
            type: string
        -
          name: 'hasMap[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: publicAccess
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'publicAccess[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: smokingAllowed
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'smokingAllowed[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: openingTime
          in: query
          required: false
          schema:
            type: string
        -
          name: 'openingTime[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: closingTime
          in: query
          required: false
          schema:
            type: string
        -
          name: 'closingTime[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Place
      operationId: postPlaceCollection
      summary: 'Creates a Place resource.'
      responses:
        201:
          description: 'Place resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Place:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Place:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Place-read'
          links:
            GetPlaceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPlaceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /places/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Place:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Place:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Place-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Place-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Place-write'
        description: 'The new Place resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/places/{id}':
    get:
      tags:
        - Place
      operationId: getPlaceItem
      summary: 'Retrieves a Place resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Place resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Place:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Place:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Place-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Place
      operationId: putPlaceItem
      summary: 'Replaces the Place resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Place resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Place:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Place:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Place-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Place:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Place:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Place-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Place-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Place-write'
        description: 'The updated Place resource'
    delete:
      tags:
        - Place
      operationId: deletePlaceItem
      summary: 'Removes the Place resource.'
      responses:
        204:
          description: 'Place resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/places/{id}/audit_trail':
    get:
      tags:
        - Place
      operationId: get_audit_trailPlaceItem
      summary: 'Retrieves a Place resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Place resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Place:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Place:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Place-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/places/{id}/change_log':
    get:
      tags:
        - Place
      operationId: get_change_logsPlaceItem
      summary: 'Retrieves a Place resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Place resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Place:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Place:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Place-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /properties:
    get:
      tags:
        - Property
      operationId: getPropertyCollection
      summary: 'Retrieves the collection of Property resources.'
      responses:
        200:
          description: 'Property collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Property:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Property:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[key]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: key
          in: query
          required: false
          schema:
            type: string
        -
          name: 'key[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Property
      operationId: postPropertyCollection
      summary: 'Creates a Property resource.'
      responses:
        201:
          description: 'Property resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
          links:
            GetPropertyItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPropertyItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /properties/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Property:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Property:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Property-write'
        description: 'The new Property resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/properties/{id}':
    get:
      tags:
        - Property
      operationId: getPropertyItem
      summary: 'Retrieves a Property resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Property resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Property
      operationId: putPropertyItem
      summary: 'Replaces the Property resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Property resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Property:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Property:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Property-write'
        description: 'The updated Property resource'
    delete:
      tags:
        - Property
      operationId: deletePropertyItem
      summary: 'Removes the Property resource.'
      responses:
        204:
          description: 'Property resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/resources/{id}/audit_trail':
    get:
      tags:
        - Property
      operationId: get_audit_trailPropertyItem
      summary: 'Retrieves a Property resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Property resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/resources/{id}/change_log':
    get:
      tags:
        - Property
      operationId: get_change_logsPropertyItem
      summary: 'Retrieves a Property resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Property resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
components:
  schemas:
    Accommodation-read:
      type: object
      description: 'A room or other accommodation that can facilitate people.'
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
        name:
          description: 'The name of this accommodation is displayed as a title to end users'
          type: string
        description:
          description: 'The description of this accommodation is displayed to end users as additional information'
          type: string
          nullable: true
        accommodationCategory:
          description: 'The category this accomodation falls into'
          type: string
          nullable: true
        floorSize:
          description: 'The floor surface area of the accommodation'
          type: string
          nullable: true
        petsAllowed:
          description: 'Answers the question if pets are allowed or not'
          type: boolean
          nullable: true
        wheelchairAccessible:
          description: 'Answers the question if the accomodation is wheelchair accessible'
          type: boolean
          nullable: true
        numberOfBathroomsTotal:
          description: 'The number of available toilets at the accommodation'
          type: integer
          nullable: true
        floorLevel:
          description: 'The floor level the accommodation is situated on'
          type: integer
          nullable: true
        maximumAttendeeCapacity:
          description: 'The maximum number of attendees the accommodation can facilitate'
          type: integer
          nullable: true
        product:
          description: 'The product this accommodation is related to'
          type: string
          nullable: true
        place:
          description: 'The location this accommodation belongs to'
          $ref: '#/components/schemas/Place-read'
        accommodationProperties:
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Accommodation-write:
      type: object
      description: 'A room or other accommodation that can facilitate people.'
      required:
        - name
      properties:
        name:
          description: 'The name of this accommodation is displayed as a title to end users'
          type: string
        description:
          description: 'The description of this accommodation is displayed to end users as additional information'
          type: string
          nullable: true
        accommodationCategory:
          description: 'The category this accomodation falls into'
          type: string
          nullable: true
        floorSize:
          description: 'The floor surface area of the accommodation'
          type: string
          nullable: true
        petsAllowed:
          description: 'Answers the question if pets are allowed or not'
          type: boolean
          nullable: true
        wheelchairAccessible:
          description: 'Answers the question if the accomodation is wheelchair accessible'
          type: boolean
          nullable: true
        numberOfBathroomsTotal:
          description: 'The number of available toilets at the accommodation'
          type: integer
          nullable: true
        floorLevel:
          description: 'The floor level the accommodation is situated on'
          type: integer
          nullable: true
        maximumAttendeeCapacity:
          description: 'The maximum number of attendees the accommodation can facilitate'
          type: integer
          nullable: true
        product:
          description: 'The product this accommodation is related to'
          type: string
          nullable: true
        place:
          description: 'The location this accommodation belongs to'
          $ref: '#/components/schemas/Place-write'
        accommodationProperties:
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty-write'
    'Accommodation:jsonld-read':
      type: object
      description: 'A room or other accommodation that can facilitate people.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
        name:
          description: 'The name of this accommodation is displayed as a title to end users'
          type: string
        description:
          description: 'The description of this accommodation is displayed to end users as additional information'
          type: string
          nullable: true
        accommodationCategory:
          description: 'The category this accomodation falls into'
          type: string
          nullable: true
        floorSize:
          description: 'The floor surface area of the accommodation'
          type: string
          nullable: true
        petsAllowed:
          description: 'Answers the question if pets are allowed or not'
          type: boolean
          nullable: true
        wheelchairAccessible:
          description: 'Answers the question if the accomodation is wheelchair accessible'
          type: boolean
          nullable: true
        numberOfBathroomsTotal:
          description: 'The number of available toilets at the accommodation'
          type: integer
          nullable: true
        floorLevel:
          description: 'The floor level the accommodation is situated on'
          type: integer
          nullable: true
        maximumAttendeeCapacity:
          description: 'The maximum number of attendees the accommodation can facilitate'
          type: integer
          nullable: true
        product:
          description: 'The product this accommodation is related to'
          type: string
          nullable: true
        place:
          description: 'The location this accommodation belongs to'
          $ref: '#/components/schemas/Place:jsonld-read'
        accommodationProperties:
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'Accommodation:jsonld-write':
      type: object
      description: 'A room or other accommodation that can facilitate people.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this accommodation is displayed as a title to end users'
          type: string
        description:
          description: 'The description of this accommodation is displayed to end users as additional information'
          type: string
          nullable: true
        accommodationCategory:
          description: 'The category this accomodation falls into'
          type: string
          nullable: true
        floorSize:
          description: 'The floor surface area of the accommodation'
          type: string
          nullable: true
        petsAllowed:
          description: 'Answers the question if pets are allowed or not'
          type: boolean
          nullable: true
        wheelchairAccessible:
          description: 'Answers the question if the accomodation is wheelchair accessible'
          type: boolean
          nullable: true
        numberOfBathroomsTotal:
          description: 'The number of available toilets at the accommodation'
          type: integer
          nullable: true
        floorLevel:
          description: 'The floor level the accommodation is situated on'
          type: integer
          nullable: true
        maximumAttendeeCapacity:
          description: 'The maximum number of attendees the accommodation can facilitate'
          type: integer
          nullable: true
        product:
          description: 'The product this accommodation is related to'
          type: string
          nullable: true
        place:
          description: 'The location this accommodation belongs to'
          $ref: '#/components/schemas/Place:jsonld-write'
        accommodationProperties:
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty:jsonld-write'
    AccommodationProperty-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        value:
          description: 'accommodationProp value'
          type: string
        key:
          readOnly: true
          description: 'accommodationProp key'
          type: string
        property:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property-read'
        accommodation:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Accommodation-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - value
    AccommodationProperty-write:
      type: object
      description: ''
      required:
        - value
      properties:
        value:
          description: 'accommodationProp value'
          type: string
        property:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property-write'
        accommodation:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Accommodation-write'
    'AccommodationProperty:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        value:
          description: 'accommodationProp value'
          type: string
        key:
          readOnly: true
          description: 'accommodationProp key'
          type: string
        property:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property:jsonld-read'
        accommodation:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Accommodation:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - value
    'AccommodationProperty:jsonld-write':
      type: object
      description: ''
      required:
        - value
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        value:
          description: 'accommodationProp value'
          type: string
        property:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property:jsonld-write'
        accommodation:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Accommodation:jsonld-write'
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        method:
          description: 'The method that was used'
          type: string
        accept:
          description: 'The contentType that was reqousted'
          type: string
        contentType:
          description: 'The contentType that was suplieds'
          type: string
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        method:
          description: 'The method that was used'
          type: string
        accept:
          description: 'The contentType that was reqousted'
          type: string
        contentType:
          description: 'The contentType that was suplieds'
          type: string
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Place-read:
      type: object
      description: 'A building or terrain with an address that can host accommodations.'
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
        name:
          description: 'The name of this place is displayed as a title to end users'
          type: string
        description:
          description: 'The description of this place is displayed to end users as additional information'
          type: string
          nullable: true
        organization:
          description: 'The organization that ownes this place'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        bagId:
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        url:
          description: 'Website of this Place'
          type: string
          nullable: true
        telephone:
          description: 'Phone number of this Place'
          type: string
          nullable: true
        logo:
          description: 'Logo of this Place'
          type: string
          nullable: true
        photo:
          description: 'Photo of this Place'
          type: string
          nullable: true
        hasMap:
          description: 'Map of this Place'
          type: string
          nullable: true
        publicAccess:
          description: 'Answers the question if the place is publicly accessible'
          type: boolean
        smokingAllowed:
          description: 'Answers the question if smoking is allowed in this place'
          type: boolean
        openingTime:
          description: 'the opening time of the location'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        closingTime:
          description: 'the closing time of the location'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        accommodations:
          description: 'The accommodations in this location'
          type: array
          items:
            $ref: '#/components/schemas/Accommodation-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - organization
        - publicAccess
        - smokingAllowed
        - openingTime
        - closingTime
    Place-write:
      type: object
      description: 'A building or terrain with an address that can host accommodations.'
      required:
        - name
        - organization
        - publicAccess
        - smokingAllowed
        - openingTime
        - closingTime
      properties:
        name:
          description: 'The name of this place is displayed as a title to end users'
          type: string
        description:
          description: 'The description of this place is displayed to end users as additional information'
          type: string
          nullable: true
        organization:
          description: 'The organization that ownes this place'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        bagId:
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        url:
          description: 'Website of this Place'
          type: string
          nullable: true
        telephone:
          description: 'Phone number of this Place'
          type: string
          nullable: true
        logo:
          description: 'Logo of this Place'
          type: string
          nullable: true
        photo:
          description: 'Photo of this Place'
          type: string
          nullable: true
        hasMap:
          description: 'Map of this Place'
          type: string
          nullable: true
        publicAccess:
          description: 'Answers the question if the place is publicly accessible'
          type: boolean
        smokingAllowed:
          description: 'Answers the question if smoking is allowed in this place'
          type: boolean
        openingTime:
          description: 'the opening time of the location'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        closingTime:
          description: 'the closing time of the location'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        accommodations:
          description: 'The accommodations in this location'
          type: array
          items:
            $ref: '#/components/schemas/Accommodation-write'
    'Place:jsonld-read':
      type: object
      description: 'A building or terrain with an address that can host accommodations.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
        name:
          description: 'The name of this place is displayed as a title to end users'
          type: string
        description:
          description: 'The description of this place is displayed to end users as additional information'
          type: string
          nullable: true
        organization:
          description: 'The organization that ownes this place'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        bagId:
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        url:
          description: 'Website of this Place'
          type: string
          nullable: true
        telephone:
          description: 'Phone number of this Place'
          type: string
          nullable: true
        logo:
          description: 'Logo of this Place'
          type: string
          nullable: true
        photo:
          description: 'Photo of this Place'
          type: string
          nullable: true
        hasMap:
          description: 'Map of this Place'
          type: string
          nullable: true
        publicAccess:
          description: 'Answers the question if the place is publicly accessible'
          type: boolean
        smokingAllowed:
          description: 'Answers the question if smoking is allowed in this place'
          type: boolean
        openingTime:
          description: 'the opening time of the location'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        closingTime:
          description: 'the closing time of the location'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        accommodations:
          description: 'The accommodations in this location'
          type: array
          items:
            $ref: '#/components/schemas/Accommodation:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - organization
        - publicAccess
        - smokingAllowed
        - openingTime
        - closingTime
    'Place:jsonld-write':
      type: object
      description: 'A building or terrain with an address that can host accommodations.'
      required:
        - name
        - organization
        - publicAccess
        - smokingAllowed
        - openingTime
        - closingTime
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this place is displayed as a title to end users'
          type: string
        description:
          description: 'The description of this place is displayed to end users as additional information'
          type: string
          nullable: true
        organization:
          description: 'The organization that ownes this place'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        bagId:
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        url:
          description: 'Website of this Place'
          type: string
          nullable: true
        telephone:
          description: 'Phone number of this Place'
          type: string
          nullable: true
        logo:
          description: 'Logo of this Place'
          type: string
          nullable: true
        photo:
          description: 'Photo of this Place'
          type: string
          nullable: true
        hasMap:
          description: 'Map of this Place'
          type: string
          nullable: true
        publicAccess:
          description: 'Answers the question if the place is publicly accessible'
          type: boolean
        smokingAllowed:
          description: 'Answers the question if smoking is allowed in this place'
          type: boolean
        openingTime:
          description: 'the opening time of the location'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        closingTime:
          description: 'the closing time of the location'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
        accommodations:
          description: 'The accommodations in this location'
          type: array
          items:
            $ref: '#/components/schemas/Accommodation:jsonld-write'
    PlaceProperty-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        value:
          description: 'placeProp value'
          type: string
        key:
          readOnly: true
          description: 'placeProp key'
          type: string
        property:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property-read'
        place:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Place-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - value
    PlaceProperty-write:
      type: object
      description: ''
      required:
        - value
      properties:
        value:
          description: 'placeProp value'
          type: string
        property:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property-write'
        place:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Place-write'
    'PlaceProperty:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        value:
          description: 'placeProp value'
          type: string
        key:
          readOnly: true
          description: 'placeProp key'
          type: string
        property:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property:jsonld-read'
        place:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Place:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - value
    'PlaceProperty:jsonld-write':
      type: object
      description: ''
      required:
        - value
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        value:
          description: 'placeProp value'
          type: string
        property:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property:jsonld-write'
        place:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Place:jsonld-write'
    Property-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Property name'
          type: string
        description:
          description: 'property description'
          type: string
          nullable: true
        key:
          description: 'key of property'
          type: string
        placeProperties:
          type: array
          items:
            $ref: '#/components/schemas/PlaceProperty-read'
        accommodationProperties:
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - key
    Property-write:
      type: object
      description: ''
      required:
        - name
        - key
      properties:
        name:
          description: 'Property name'
          type: string
        description:
          description: 'property description'
          type: string
          nullable: true
        key:
          description: 'key of property'
          type: string
        placeProperties:
          type: array
          items:
            $ref: '#/components/schemas/PlaceProperty-write'
        accommodationProperties:
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty-write'
    'Property:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Property name'
          type: string
        description:
          description: 'property description'
          type: string
          nullable: true
        key:
          description: 'key of property'
          type: string
        placeProperties:
          type: array
          items:
            $ref: '#/components/schemas/PlaceProperty:jsonld-read'
        accommodationProperties:
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty:jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - key
    'Property:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - key
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Property name'
          type: string
        description:
          description: 'property description'
          type: string
          nullable: true
        key:
          description: 'key of property'
          type: string
        placeProperties:
          type: array
          items:
            $ref: '#/components/schemas/PlaceProperty:jsonld-write'
        accommodationProperties:
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty:jsonld-write'
definitions:
  Accommodation-read:
    properties:
      id:
        description: ''
        type: \UuidInterface
      name:
        description: 'The name of this accommodation is displayed as a title to end users'
        type: string
        example: 'My Accommodation'
        maxLength: 255
      description:
        description: 'The description of this accommodation is displayed to end users as additional information'
        type: string
        example: 'This is the best accommodation ever'
        maxLength: 2550
      accommodationCategory:
        description: 'The category this accomodation falls into'
        type: string
        example: Restaurant
        maxLength: 255
      floorSize:
        description: 'The floor surface area of the accommodation'
        type: string
        example: '25 m^2'
        maxLength: 255
      petsAllowed:
        description: 'Answers the question if pets are allowed or not'
        type: bool
        example: 'true'
      wheelchairAccessible:
        description: 'Answers the question if the accomodation is wheelchair accessible'
        type: bool
        example: 'true'
      numberOfBathroomsTotal:
        description: 'The number of available toilets at the accommodation'
        type: int
        example: '10'
      floorLevel:
        description: 'The floor level the accommodation is situated on'
        type: int
        example: '10'
      maximumAttendeeCapacity:
        description: 'The maximum number of attendees the accommodation can facilitate'
        type: int
        example: '10'
      product:
        description: 'The product this accommodation is related to'
        type: string
        example: 'My Accommodation'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      place:
        description: 'The location this accommodation belongs to'
        type: \Place
      accommodationProperties: []
    required:
      - name
  Accommodation-write:
    properties:
      name:
        description: 'The name of this accommodation is displayed as a title to end users'
        type: string
        example: 'My Accommodation'
        maxLength: 255
      description:
        description: 'The description of this accommodation is displayed to end users as additional information'
        type: string
        example: 'This is the best accommodation ever'
        maxLength: 2550
      accommodationCategory:
        description: 'The category this accomodation falls into'
        type: string
        example: Restaurant
        maxLength: 255
      floorSize:
        description: 'The floor surface area of the accommodation'
        type: string
        example: '25 m^2'
        maxLength: 255
      petsAllowed:
        description: 'Answers the question if pets are allowed or not'
        type: bool
        example: 'true'
      wheelchairAccessible:
        description: 'Answers the question if the accomodation is wheelchair accessible'
        type: bool
        example: 'true'
      numberOfBathroomsTotal:
        description: 'The number of available toilets at the accommodation'
        type: int
        example: '10'
      floorLevel:
        description: 'The floor level the accommodation is situated on'
        type: int
        example: '10'
      maximumAttendeeCapacity:
        description: 'The maximum number of attendees the accommodation can facilitate'
        type: int
        example: '10'
      product:
        description: 'The product this accommodation is related to'
        type: string
        example: 'My Accommodation'
        maxLength: 255
      place:
        description: 'The location this accommodation belongs to'
        type: \Place
      accommodationProperties: []
    required:
      - name
  Place-read:
    properties:
      id:
        description: ''
        type: \UuidInterface
      name:
        description: 'The name of this place is displayed as a title to end users'
        type: string
        example: 'My Place'
        maxLength: 255
      description:
        description: 'The description of this place is displayed to end users as additional information'
        type: string
        example: 'This is the best place ever'
        maxLength: 2550
      organization:
        description: 'The organization that ownes this place'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      bagId:
        description: 'Bagnummeraanduiding of this Address'
        type: string
        example: '0363200000218908'
        maxLength: 16
      url:
        description: 'Website of this Place'
        type: string
        example: 'https://location.com'
        maxLength: 255
      telephone:
        description: 'Phone number of this Place'
        type: string
        example: '+31 (0)26 355 7772'
        maxLength: 255
      logo:
        description: 'Logo of this Place'
        type: string
        example: 'https://location.com/logo.svg'
        maxLength: 255
      photo:
        description: 'Photo of this Place'
        type: string
        example: 'https://location.com/photo.jpg'
        maxLength: 255
      hasMap:
        description: 'Map of this Place'
        type: string
        example: 'https://location.com/map.pdf'
        maxLength: 255
      publicAccess:
        description: 'Answers the question if the place is publicly accessible'
        type: bool
        example: 'true'
      smokingAllowed:
        description: 'Answers the question if smoking is allowed in this place'
        type: bool
        example: 'true'
      openingTime:
        description: 'the opening time of the location'
        type: string
        example: '2020-09-17 14:11:17'
        format: date-time
      closingTime:
        description: 'the closing time of the location'
        type: string
        example: '2020-09-17 14:11:17'
        format: date-time
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      accommodations:
        description: 'The accommodations in this location'
        type: '\Accommodation[]|\ArrayCollection'
      placeProperties: []
    required:
      - name
      - organization
      - publicAccess
      - smokingAllowed
      - openingTime
      - closingTime
  Place-write:
    properties:
      name:
        description: 'The name of this place is displayed as a title to end users'
        type: string
        example: 'My Place'
        maxLength: 255
      description:
        description: 'The description of this place is displayed to end users as additional information'
        type: string
        example: 'This is the best place ever'
        maxLength: 2550
      organization:
        description: 'The organization that ownes this place'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      bagId:
        description: 'Bagnummeraanduiding of this Address'
        type: string
        example: '0363200000218908'
        maxLength: 16
      url:
        description: 'Website of this Place'
        type: string
        example: 'https://location.com'
        maxLength: 255
      telephone:
        description: 'Phone number of this Place'
        type: string
        example: '+31 (0)26 355 7772'
        maxLength: 255
      logo:
        description: 'Logo of this Place'
        type: string
        example: 'https://location.com/logo.svg'
        maxLength: 255
      photo:
        description: 'Photo of this Place'
        type: string
        example: 'https://location.com/photo.jpg'
        maxLength: 255
      hasMap:
        description: 'Map of this Place'
        type: string
        example: 'https://location.com/map.pdf'
        maxLength: 255
      publicAccess:
        description: 'Answers the question if the place is publicly accessible'
        type: bool
        example: 'true'
      smokingAllowed:
        description: 'Answers the question if smoking is allowed in this place'
        type: bool
        example: 'true'
      openingTime:
        description: 'the opening time of the location'
        type: string
        example: '2020-09-17 14:11:17'
        format: date-time
      closingTime:
        description: 'the closing time of the location'
        type: string
        example: '2020-09-17 14:11:17'
        format: date-time
      accommodations:
        description: 'The accommodations in this location'
        type: '\Accommodation[]|\ArrayCollection'
      placeProperties: []
    required:
      - name
      - organization
      - publicAccess
      - smokingAllowed
      - openingTime
      - closingTime
  AccommodationProperty-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      value:
        description: 'accommodationProp value'
        type: string
        example: 'accommodationProp value'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      property: []
      accommodation: []
    required:
      - value
  AccommodationProperty-write:
    properties:
      value:
        description: 'accommodationProp value'
        type: string
        example: 'accommodationProp value'
        maxLength: 255
      property: []
      accommodation: []
    required:
      - value
  Property-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Property name'
        type: string
        example: 'Property name'
        maxLength: 255
      description:
        description: 'property description'
        type: string
        example: 'Property description'
        maxLength: 2550
      key:
        description: 'key of property'
        type: string
        example: '4123'
        maxLength: 200
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      placeProperties: []
      accommodationProperties: []
    required:
      - name
      - key
  Property-write:
    properties:
      name:
        description: 'Property name'
        type: string
        example: 'Property name'
        maxLength: 255
      description:
        description: 'property description'
        type: string
        example: 'Property description'
        maxLength: 2550
      key:
        description: 'key of property'
        type: string
        example: '4123'
        maxLength: 200
      placeProperties: []
      accommodationProperties: []
    required:
      - name
      - key
  PlaceProperty-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      value:
        description: 'placeProp value'
        type: string
        example: 'placeProp value'
        maxLength: 255
      dateCreated:
        description: 'The moment this resource was created'
        type: \Datetime
      dateModified:
        description: 'The moment this resource last Modified'
        type: \Datetime
      property: []
      place: []
    required:
      - value
  PlaceProperty-write:
    properties:
      value:
        description: 'placeProp value'
        type: string
        example: 'placeProp value'
        maxLength: 255
      property: []
      place: []
    required:
      - value
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-09-17 14:11:17'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-09-17 14:11:17'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-09-17 14:11:17'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-09-17 14:11:17'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Accommodation
    description: |
      A room or other accommodation that can facilitate people.
      
      
  -
    name: Place
    description: |
      A building or terrain with an address that can host accommodations.
      
      
  -
    name: AccommodationProperty
    description: |
      
      
      
  -
    name: Property
    description: |
      
      
      
  -
    name: PlaceProperty
    description: |
      
      
      
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the AuditTrail resource'
      write: 'write right to the AuditTrail resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the AuditTrail resource'
      write: 'write right to the AuditTrail resource'
host: irc.zaakonline.nl
servers:
  -
    name: zuid-drecht.nl
    url: lc.dev.zuid-drecht.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
