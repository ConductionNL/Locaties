openapi: 3.0.3
info:
  title: ''
  description: |-
    API Details
    - Component: 
    - Reference: ocatiecatalogus
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/locatiecatalogus) / [zip](https://github.com/ConductionNL/locatiecatalogus/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](schema/ocatiecatalogus.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 

    Het Locatie Component implementeert de places en accommodations strategie vanuit schema.org. Het vormt daarmee de basis voor het bijhouden en verhuren van ruimtes en kan in de meest simpele configuratie worden gebruikt voor planningsvraagstukken. Bijvoorbeeld bij gebouwen rondom te reserveren ruimtes zoals (vergader)zalen. Dit component is nadrukkelijk ontworpen om samen met het PDC het commercieel verhuren van gehele gebouwen, of ruimtes daarin te faciliteren. Hiermee kan het de technische basis vormen voor appartementen/kamerverhuur platforms, hotel-software of zelfs camping-software.
  version: V1.0
servers:
  -
    url: /
    description: ''
paths:
  /accommodation_properties:
    get:
      operationId: getAccommodationPropertyCollection
      tags:
        - AccommodationProperty
      responses:
        200:
          description: 'AccommodationProperty collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AccommodationProperty.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AccommodationProperty.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccommodationProperty-read'
      summary: 'Retrieves the collection of AccommodationProperty resources.'
      description: 'Retrieves the collection of AccommodationProperty resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[value]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: value
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'value[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAccommodationPropertyCollection
      tags:
        - AccommodationProperty
      responses:
        201:
          description: 'AccommodationProperty resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccommodationProperty.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
          links:
            GetAccommodationPropertyItem:
              operationId: getAccommodationPropertyItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /accommodation_properties/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AccommodationProperty resource.'
      description: 'Creates a AccommodationProperty resource.'
      parameters: []
      requestBody:
        description: 'The new AccommodationProperty resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AccommodationProperty.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
        required: true
      deprecated: false
    parameters: []
  '/accommodation_properties/{id}':
    get:
      operationId: getAccommodationPropertyItem
      tags:
        - AccommodationProperty
      responses:
        200:
          description: 'AccommodationProperty resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccommodationProperty.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AccommodationProperty resource.'
      description: 'Retrieves a AccommodationProperty resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAccommodationPropertyItem
      tags:
        - AccommodationProperty
      responses:
        200:
          description: 'AccommodationProperty resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AccommodationProperty.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AccommodationProperty-read'
          links:
            GetAccommodationPropertyItem:
              operationId: getAccommodationPropertyItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /accommodation_properties/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AccommodationProperty resource.'
      description: 'Replaces the AccommodationProperty resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AccommodationProperty resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AccommodationProperty.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AccommodationProperty-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAccommodationPropertyItem
      tags:
        - AccommodationProperty
      responses:
        204:
          description: 'AccommodationProperty resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AccommodationProperty resource.'
      description: 'Removes the AccommodationProperty resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /accommodations:
    get:
      operationId: getAccommodationCollection
      tags:
        - Accommodation
      responses:
        200:
          description: 'Accommodation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Accommodation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Accommodation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accommodation-read'
      summary: 'Retrieves the collection of Accommodation resources.'
      description: 'Retrieves the collection of Accommodation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: petsAllowed
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: wheelchairAccessible
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[accommodationCategory]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[floorSize]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[petsAllowed]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[wheelchairAccessible]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[numberOfBathroomsTotal]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[floorLevel]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[maximumAttendeeCapacity]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[product]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: place.organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAccommodationCollection
      tags:
        - Accommodation
      responses:
        201:
          description: 'Accommodation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Accommodation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Accommodation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
          links:
            GetAccommodationItem:
              operationId: getAccommodationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /accommodations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Accommodation resource.'
      description: 'Creates a Accommodation resource.'
      parameters: []
      requestBody:
        description: 'The new Accommodation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Accommodation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Accommodation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
        required: true
      deprecated: false
    parameters: []
  '/accommodations/{id}':
    get:
      operationId: getAccommodationItem
      tags:
        - Accommodation
      responses:
        200:
          description: 'Accommodation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Accommodation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Accommodation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Accommodation resource.'
      description: 'Retrieves a Accommodation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAccommodationItem
      tags:
        - Accommodation
      responses:
        200:
          description: 'Accommodation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Accommodation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Accommodation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
          links:
            GetAccommodationItem:
              operationId: getAccommodationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /accommodations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Accommodation resource.'
      description: 'Replaces the Accommodation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Accommodation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Accommodation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Accommodation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Accommodation-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAccommodationItem
      tags:
        - Accommodation
      responses:
        204:
          description: 'Accommodation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Accommodation resource.'
      description: 'Removes the Accommodation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/accomodations/{id}/audit_trail':
    get:
      operationId: get_audit_trailAccommodationItem
      tags:
        - Accommodation
      responses:
        200:
          description: 'Accommodation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Accommodation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Accommodation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Accommodation resource.'
      description: 'Retrieves a Accommodation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/accomodations/{id}/change_log':
    get:
      operationId: get_change_logsAccommodationItem
      tags:
        - Accommodation
      responses:
        200:
          description: 'Accommodation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Accommodation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Accommodation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Accommodation-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Accommodation resource.'
      description: 'Retrieves a Accommodation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /addresses:
    get:
      operationId: getAddressCollection
      tags:
        - Address
      responses:
        200:
          description: 'Address collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves the collection of Address resources.'
      description: 'Retrieves the collection of Address resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[bagnummeraanduiding]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[street]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[houseNumber]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[houseNumberSuffix]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[postalCode]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[region]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[locality]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[country]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[postOfficeBoxNumber]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: bagnummeraanduiding
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'bagnummeraanduiding[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: street
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'street[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: houseNumber
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'houseNumber[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: houseNumberSuffix
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'houseNumberSuffix[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: postalCode
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'postalCode[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: region
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'region[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: locality
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'locality[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: country
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'country[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: postOfficeBoxNumber
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'postOfficeBoxNumber[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAddressCollection
      tags:
        - Address
      responses:
        201:
          description: 'Address resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Address resource.'
      description: 'Creates a Address resource.'
      parameters: []
      requestBody:
        description: 'The new Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Address-write'
        required: true
      deprecated: false
    parameters: []
  '/addresses/{id}':
    get:
      operationId: getAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Address resource.'
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Address resource.'
      description: 'Replaces the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Address-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAddressItem
      tags:
        - Address
      responses:
        204:
          description: 'Address resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Address resource.'
      description: 'Removes the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/adresses/{id}/audit_trail':
    get:
      operationId: get_audit_trailAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Address resource.'
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/adresses/{id}/change_log':
    get:
      operationId: get_change_logsAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Address resource.'
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /audit_trails:
    get:
      operationId: getAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      summary: 'Retrieves the collection of AuditTrail resources.'
      description: 'Retrieves the collection of AuditTrail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[request]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[user]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resourceType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endpoint]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[session]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: request
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'request[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: subject
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subject[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endpoint
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endpoint[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: contentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'contentType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: content
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'content[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: session
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'session[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AuditTrail resource.'
      description: 'Creates a AuditTrail resource.'
      parameters: []
      requestBody:
        description: 'The new AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  '/audit_trails/{id}':
    get:
      operationId: getAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AuditTrail resource.'
      description: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AuditTrail resource.'
      description: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAuditTrailItem
      tags:
        - AuditTrail
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AuditTrail resource.'
      description: 'Removes the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AuditTrail resource.'
      description: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  /change_logs:
    get:
      operationId: getChangeLogCollection
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      summary: 'Retrieves the collection of ChangeLog resources.'
      description: 'Retrieves the collection of ChangeLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[action]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectClass]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[version]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: action
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'action[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectClass
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectClass[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: version
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'version[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postChangeLogCollection
      tags:
        - ChangeLog
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ChangeLog resource.'
      description: 'Creates a ChangeLog resource.'
      parameters: []
      requestBody:
        description: 'The new ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  '/change_logs/{id}':
    get:
      operationId: getChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ChangeLog resource.'
      description: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ChangeLog resource.'
      description: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteChangeLogItem
      tags:
        - ChangeLog
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ChangeLog resource.'
      description: 'Removes the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ChangeLog resource.'
      description: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  /place_properties:
    get:
      operationId: getPlacePropertyCollection
      tags:
        - PlaceProperty
      responses:
        200:
          description: 'PlaceProperty collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/PlaceProperty.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/PlaceProperty.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceProperty-read'
      summary: 'Retrieves the collection of PlaceProperty resources.'
      description: 'Retrieves the collection of PlaceProperty resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[value]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: value
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'value[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postPlacePropertyCollection
      tags:
        - PlaceProperty
      responses:
        201:
          description: 'PlaceProperty resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PlaceProperty.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
          links:
            GetPlacePropertyItem:
              operationId: getPlacePropertyItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /place_properties/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a PlaceProperty resource.'
      description: 'Creates a PlaceProperty resource.'
      parameters: []
      requestBody:
        description: 'The new PlaceProperty resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/PlaceProperty.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
        required: true
      deprecated: false
    parameters: []
  '/place_properties/{id}':
    get:
      operationId: getPlacePropertyItem
      tags:
        - PlaceProperty
      responses:
        200:
          description: 'PlaceProperty resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PlaceProperty.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a PlaceProperty resource.'
      description: 'Retrieves a PlaceProperty resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putPlacePropertyItem
      tags:
        - PlaceProperty
      responses:
        200:
          description: 'PlaceProperty resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PlaceProperty.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PlaceProperty-read'
          links:
            GetPlacePropertyItem:
              operationId: getPlacePropertyItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /place_properties/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the PlaceProperty resource.'
      description: 'Replaces the PlaceProperty resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated PlaceProperty resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/PlaceProperty.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PlaceProperty-write'
        required: true
      deprecated: false
    delete:
      operationId: deletePlacePropertyItem
      tags:
        - PlaceProperty
      responses:
        204:
          description: 'PlaceProperty resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the PlaceProperty resource.'
      description: 'Removes the PlaceProperty resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /places:
    get:
      operationId: getPlaceCollection
      tags:
        - Place
      responses:
        200:
          description: 'Place collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Place.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Place.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place-read'
      summary: 'Retrieves the collection of Place resources.'
      description: 'Retrieves the collection of Place resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: publicAccess
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: smokingAllowed
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[calendar]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[url]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[telephone]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[logo]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[photo]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[hasMap]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[publicAccess]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[smokingAllowed]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[openingTime]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[closingTime]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'openingTime[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'openingTime[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'openingTime[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'openingTime[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'closingTime[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'closingTime[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'closingTime[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'closingTime[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postPlaceCollection
      tags:
        - Place
      responses:
        201:
          description: 'Place resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Place.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Place.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Place-read'
          links:
            GetPlaceItem:
              operationId: getPlaceItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /places/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Place resource.'
      description: 'Creates a Place resource.'
      parameters: []
      requestBody:
        description: 'The new Place resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Place.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Place.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Place-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Place-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Place-write'
        required: true
      deprecated: false
    parameters: []
  '/places/{id}':
    get:
      operationId: getPlaceItem
      tags:
        - Place
      responses:
        200:
          description: 'Place resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Place.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Place.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Place-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Place resource.'
      description: 'Retrieves a Place resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putPlaceItem
      tags:
        - Place
      responses:
        200:
          description: 'Place resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Place.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Place.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Place-read'
          links:
            GetPlaceItem:
              operationId: getPlaceItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /places/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Place resource.'
      description: 'Replaces the Place resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Place resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Place.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Place.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Place-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Place-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Place-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Place-write'
        required: true
      deprecated: false
    delete:
      operationId: deletePlaceItem
      tags:
        - Place
      responses:
        204:
          description: 'Place resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Place resource.'
      description: 'Removes the Place resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/places/{id}/audit_trail':
    get:
      operationId: get_audit_trailPlaceItem
      tags:
        - Place
      responses:
        200:
          description: 'Place resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Place.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Place.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Place-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Place resource.'
      description: 'Retrieves a Place resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/places/{id}/change_log':
    get:
      operationId: get_change_logsPlaceItem
      tags:
        - Place
      responses:
        200:
          description: 'Place resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Place.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Place.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Place-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Place-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Place-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Place resource.'
      description: 'Retrieves a Place resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /properties:
    get:
      operationId: getPropertyCollection
      tags:
        - Property
      responses:
        200:
          description: 'Property collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Property.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Property.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
      summary: 'Retrieves the collection of Property resources.'
      description: 'Retrieves the collection of Property resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[key]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: key
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'key[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postPropertyCollection
      tags:
        - Property
      responses:
        201:
          description: 'Property resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
          links:
            GetPropertyItem:
              operationId: getPropertyItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /properties/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Property resource.'
      description: 'Creates a Property resource.'
      parameters: []
      requestBody:
        description: 'The new Property resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Property.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Property.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Property-write'
        required: true
      deprecated: false
    parameters: []
  '/properties/{id}':
    get:
      operationId: getPropertyItem
      tags:
        - Property
      responses:
        200:
          description: 'Property resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Property resource.'
      description: 'Retrieves a Property resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putPropertyItem
      tags:
        - Property
      responses:
        200:
          description: 'Property resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
          links:
            GetPropertyItem:
              operationId: getPropertyItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /properties/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Property resource.'
      description: 'Replaces the Property resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Property resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Property.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Property.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Property-write'
        required: true
      deprecated: false
    delete:
      operationId: deletePropertyItem
      tags:
        - Property
      responses:
        204:
          description: 'Property resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Property resource.'
      description: 'Removes the Property resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/resources/{id}/audit_trail':
    get:
      operationId: get_audit_trailPropertyItem
      tags:
        - Property
      responses:
        200:
          description: 'Property resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Property resource.'
      description: 'Retrieves a Property resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/resources/{id}/change_log':
    get:
      operationId: get_change_logsPropertyItem
      tags:
        - Property
      responses:
        200:
          description: 'Property resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Property resource.'
      description: 'Retrieves a Property resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
components:
  schemas:
    Accommodation-read:
      type: object
      description: 'A room or other accommodation that can facilitate people.'
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'The name of this accommodation is displayed as a title to end users'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this accommodation is displayed to end users as additional information'
          type: string
          nullable: true
        accommodationCategory:
          maxLength: 255
          description: 'The category this accomodation falls into'
          type: string
          nullable: true
        floorSize:
          maxLength: 255
          description: 'The floor surface area of the accommodation'
          type: string
          nullable: true
        petsAllowed:
          description: 'Answers the question if pets are allowed or not'
          type: boolean
          nullable: true
        wheelchairAccessible:
          description: 'Answers the question if the accomodation is wheelchair accessible'
          type: boolean
          nullable: true
        numberOfBathroomsTotal:
          description: 'The number of available toilets at the accommodation'
          type: integer
          nullable: true
        floorLevel:
          description: 'The floor level the accommodation is situated on'
          type: integer
          nullable: true
        maximumAttendeeCapacity:
          description: 'The maximum number of attendees the accommodation can facilitate'
          type: integer
          nullable: true
        product:
          maxLength: 255
          description: 'The product this accommodation is related to'
          type: string
          nullable: true
        place:
          description: 'The location this accommodation belongs to'
          $ref: '#/components/schemas/Place-read'
        accommodationProperties:
          description: 'accommodation properties'
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Accommodation-write:
      type: object
      description: 'A room or other accommodation that can facilitate people.'
      required:
        - name
      properties:
        name:
          maxLength: 255
          description: 'The name of this accommodation is displayed as a title to end users'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this accommodation is displayed to end users as additional information'
          type: string
          nullable: true
        accommodationCategory:
          maxLength: 255
          description: 'The category this accomodation falls into'
          type: string
          nullable: true
        floorSize:
          maxLength: 255
          description: 'The floor surface area of the accommodation'
          type: string
          nullable: true
        petsAllowed:
          description: 'Answers the question if pets are allowed or not'
          type: boolean
          nullable: true
        wheelchairAccessible:
          description: 'Answers the question if the accomodation is wheelchair accessible'
          type: boolean
          nullable: true
        numberOfBathroomsTotal:
          description: 'The number of available toilets at the accommodation'
          type: integer
          nullable: true
        floorLevel:
          description: 'The floor level the accommodation is situated on'
          type: integer
          nullable: true
        maximumAttendeeCapacity:
          description: 'The maximum number of attendees the accommodation can facilitate'
          type: integer
          nullable: true
        product:
          maxLength: 255
          description: 'The product this accommodation is related to'
          type: string
          nullable: true
        place:
          description: 'The location this accommodation belongs to'
          $ref: '#/components/schemas/Place-write'
        accommodationProperties:
          description: 'accommodation properties'
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty-write'
    Accommodation.jsonld-read:
      type: object
      description: 'A room or other accommodation that can facilitate people.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'The name of this accommodation is displayed as a title to end users'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this accommodation is displayed to end users as additional information'
          type: string
          nullable: true
        accommodationCategory:
          maxLength: 255
          description: 'The category this accomodation falls into'
          type: string
          nullable: true
        floorSize:
          maxLength: 255
          description: 'The floor surface area of the accommodation'
          type: string
          nullable: true
        petsAllowed:
          description: 'Answers the question if pets are allowed or not'
          type: boolean
          nullable: true
        wheelchairAccessible:
          description: 'Answers the question if the accomodation is wheelchair accessible'
          type: boolean
          nullable: true
        numberOfBathroomsTotal:
          description: 'The number of available toilets at the accommodation'
          type: integer
          nullable: true
        floorLevel:
          description: 'The floor level the accommodation is situated on'
          type: integer
          nullable: true
        maximumAttendeeCapacity:
          description: 'The maximum number of attendees the accommodation can facilitate'
          type: integer
          nullable: true
        product:
          maxLength: 255
          description: 'The product this accommodation is related to'
          type: string
          nullable: true
        place:
          description: 'The location this accommodation belongs to'
          $ref: '#/components/schemas/Place.jsonld-read'
        accommodationProperties:
          description: 'accommodation properties'
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty.jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Accommodation.jsonld-write:
      type: object
      description: 'A room or other accommodation that can facilitate people.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'The name of this accommodation is displayed as a title to end users'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this accommodation is displayed to end users as additional information'
          type: string
          nullable: true
        accommodationCategory:
          maxLength: 255
          description: 'The category this accomodation falls into'
          type: string
          nullable: true
        floorSize:
          maxLength: 255
          description: 'The floor surface area of the accommodation'
          type: string
          nullable: true
        petsAllowed:
          description: 'Answers the question if pets are allowed or not'
          type: boolean
          nullable: true
        wheelchairAccessible:
          description: 'Answers the question if the accomodation is wheelchair accessible'
          type: boolean
          nullable: true
        numberOfBathroomsTotal:
          description: 'The number of available toilets at the accommodation'
          type: integer
          nullable: true
        floorLevel:
          description: 'The floor level the accommodation is situated on'
          type: integer
          nullable: true
        maximumAttendeeCapacity:
          description: 'The maximum number of attendees the accommodation can facilitate'
          type: integer
          nullable: true
        product:
          maxLength: 255
          description: 'The product this accommodation is related to'
          type: string
          nullable: true
        place:
          description: 'The location this accommodation belongs to'
          $ref: '#/components/schemas/Place.jsonld-write'
        accommodationProperties:
          description: 'accommodation properties'
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty.jsonld-write'
    AccommodationProperty-read:
      type: object
      description: 'A property meant as an attribute for a accommodation'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        value:
          maxLength: 255
          description: 'accommodationProperty value'
          type: string
        key:
          readOnly: true
          description: 'accommodationProperty key'
          type: string
        property:
          description: 'property linked to this accommodation property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property-read'
        accommodation:
          description: 'accommodation linked to this accommodation property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Accommodation-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - value
    AccommodationProperty-write:
      type: object
      description: 'A property meant as an attribute for a accommodation'
      required:
        - value
      properties:
        value:
          maxLength: 255
          description: 'accommodationProperty value'
          type: string
        property:
          description: 'property linked to this accommodation property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property-write'
        accommodation:
          description: 'accommodation linked to this accommodation property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Accommodation-write'
    AccommodationProperty.jsonld-read:
      type: object
      description: 'A property meant as an attribute for a accommodation'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        value:
          maxLength: 255
          description: 'accommodationProperty value'
          type: string
        key:
          readOnly: true
          description: 'accommodationProperty key'
          type: string
        property:
          description: 'property linked to this accommodation property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property.jsonld-read'
        accommodation:
          description: 'accommodation linked to this accommodation property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Accommodation.jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - value
    AccommodationProperty.jsonld-write:
      type: object
      description: 'A property meant as an attribute for a accommodation'
      required:
        - value
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        value:
          maxLength: 255
          description: 'accommodationProperty value'
          type: string
        property:
          description: 'property linked to this accommodation property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property.jsonld-write'
        accommodation:
          description: 'accommodation linked to this accommodation property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Accommodation.jsonld-write'
    Address-read:
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'Uuid of this address'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          maxLength: 16
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          maxLength: 255
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          maxLength: 255
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          maxLength: 255
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          maxLength: 255
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          maxLength: 255
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          maxLength: 255
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          maxLength: 255
          description: 'Post office box number of a Address'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    Address-write:
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        name:
          maxLength: 255
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          maxLength: 16
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          maxLength: 255
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          maxLength: 255
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          maxLength: 255
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          maxLength: 255
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          maxLength: 255
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          maxLength: 255
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          maxLength: 255
          description: 'Post office box number of a Address'
          type: string
          nullable: true
    Address.jsonld-read:
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'Uuid of this address'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          maxLength: 16
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          maxLength: 255
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          maxLength: 255
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          maxLength: 255
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          maxLength: 255
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          maxLength: 255
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          maxLength: 255
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          maxLength: 255
          description: 'Post office box number of a Address'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    Address.jsonld-write:
      type: object
      description: 'All properties that the entity Address holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this Address'
          type: string
          nullable: true
        bagnummeraanduiding:
          maxLength: 16
          description: 'Bagnummeraanduiding of this Address'
          type: string
          nullable: true
        street:
          maxLength: 255
          description: 'Street of this Address'
          type: string
          nullable: true
        houseNumber:
          maxLength: 255
          description: 'House number of this Address'
          type: string
          nullable: true
        houseNumberSuffix:
          maxLength: 255
          description: 'House number suffix of this Address'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of a Address'
          type: string
          nullable: true
        region:
          maxLength: 255
          description: 'region Region of a Address'
          type: string
          nullable: true
        locality:
          maxLength: 255
          description: 'Locality of a Address'
          type: string
          nullable: true
        country:
          maxLength: 255
          description: 'Country of a Address'
          type: string
          nullable: true
        postOfficeBoxNumber:
          maxLength: 255
          description: 'Post office box number of a Address'
          type: string
          nullable: true
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    AuditTrail.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    ChangeLog.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Place-read:
      type: object
      description: 'A building or terrain with an address that can host accommodations.'
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'The name of this place is displayed as a title to end users'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this place is displayed to end users as additional information'
          type: string
          nullable: true
        organization:
          description: 'The organization that ownes this place'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        calendar:
          description: 'The url of the calendar that belongs to this place'
          type: string
          nullable: true
        resource:
          description: 'The url of the resource that is connected to this place'
          type: string
          nullable: true
        address:
          description: 'The address  of this place'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-read'
        url:
          maxLength: 255
          description: 'Website of this Place'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'Phone number of this Place'
          type: string
          nullable: true
        logo:
          maxLength: 255
          description: 'Logo of this Place'
          type: string
          nullable: true
        photo:
          maxLength: 255
          description: 'Photo of this Place'
          type: string
          nullable: true
        hasMap:
          maxLength: 255
          description: 'Map of this Place'
          type: string
          nullable: true
        publicAccess:
          description: 'Answers the question if the place is publicly accessible'
          type: boolean
          nullable: true
        smokingAllowed:
          description: 'Answers the question if smoking is allowed in this place'
          type: boolean
          nullable: true
        openingTime:
          description: 'the opening time of the location'
          type: string
          format: date-time
          nullable: true
        closingTime:
          description: 'the closing time of the location'
          type: string
          format: date-time
          nullable: true
        accommodations:
          description: 'The accommodations in this location'
          type: array
          items:
            $ref: '#/components/schemas/Accommodation-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - organization
    Place-write:
      type: object
      description: 'A building or terrain with an address that can host accommodations.'
      required:
        - name
        - organization
      properties:
        name:
          maxLength: 255
          description: 'The name of this place is displayed as a title to end users'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this place is displayed to end users as additional information'
          type: string
          nullable: true
        organization:
          description: 'The organization that ownes this place'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        calendar:
          description: 'The url of the calendar that belongs to this place'
          type: string
          nullable: true
        resource:
          description: 'The url of the resource that is connected to this place'
          type: string
          nullable: true
        address:
          description: 'The address  of this place'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-write'
        url:
          maxLength: 255
          description: 'Website of this Place'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'Phone number of this Place'
          type: string
          nullable: true
        logo:
          maxLength: 255
          description: 'Logo of this Place'
          type: string
          nullable: true
        photo:
          maxLength: 255
          description: 'Photo of this Place'
          type: string
          nullable: true
        hasMap:
          maxLength: 255
          description: 'Map of this Place'
          type: string
          nullable: true
        publicAccess:
          description: 'Answers the question if the place is publicly accessible'
          type: boolean
          nullable: true
        smokingAllowed:
          description: 'Answers the question if smoking is allowed in this place'
          type: boolean
          nullable: true
        openingTime:
          description: 'the opening time of the location'
          type: string
          format: date-time
          nullable: true
        closingTime:
          description: 'the closing time of the location'
          type: string
          format: date-time
          nullable: true
        accommodations:
          description: 'The accommodations in this location'
          type: array
          items:
            $ref: '#/components/schemas/Accommodation-write'
    Place.jsonld-read:
      type: object
      description: 'A building or terrain with an address that can host accommodations.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'The name of this place is displayed as a title to end users'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this place is displayed to end users as additional information'
          type: string
          nullable: true
        organization:
          description: 'The organization that ownes this place'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        calendar:
          description: 'The url of the calendar that belongs to this place'
          type: string
          nullable: true
        resource:
          description: 'The url of the resource that is connected to this place'
          type: string
          nullable: true
        address:
          description: 'The address  of this place'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-read'
        url:
          maxLength: 255
          description: 'Website of this Place'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'Phone number of this Place'
          type: string
          nullable: true
        logo:
          maxLength: 255
          description: 'Logo of this Place'
          type: string
          nullable: true
        photo:
          maxLength: 255
          description: 'Photo of this Place'
          type: string
          nullable: true
        hasMap:
          maxLength: 255
          description: 'Map of this Place'
          type: string
          nullable: true
        publicAccess:
          description: 'Answers the question if the place is publicly accessible'
          type: boolean
          nullable: true
        smokingAllowed:
          description: 'Answers the question if smoking is allowed in this place'
          type: boolean
          nullable: true
        openingTime:
          description: 'the opening time of the location'
          type: string
          format: date-time
          nullable: true
        closingTime:
          description: 'the closing time of the location'
          type: string
          format: date-time
          nullable: true
        accommodations:
          description: 'The accommodations in this location'
          type: array
          items:
            $ref: '#/components/schemas/Accommodation.jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - organization
    Place.jsonld-write:
      type: object
      description: 'A building or terrain with an address that can host accommodations.'
      required:
        - name
        - organization
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'The name of this place is displayed as a title to end users'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this place is displayed to end users as additional information'
          type: string
          nullable: true
        organization:
          description: 'The organization that ownes this place'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        calendar:
          description: 'The url of the calendar that belongs to this place'
          type: string
          nullable: true
        resource:
          description: 'The url of the resource that is connected to this place'
          type: string
          nullable: true
        address:
          description: 'The address  of this place'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-write'
        url:
          maxLength: 255
          description: 'Website of this Place'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'Phone number of this Place'
          type: string
          nullable: true
        logo:
          maxLength: 255
          description: 'Logo of this Place'
          type: string
          nullable: true
        photo:
          maxLength: 255
          description: 'Photo of this Place'
          type: string
          nullable: true
        hasMap:
          maxLength: 255
          description: 'Map of this Place'
          type: string
          nullable: true
        publicAccess:
          description: 'Answers the question if the place is publicly accessible'
          type: boolean
          nullable: true
        smokingAllowed:
          description: 'Answers the question if smoking is allowed in this place'
          type: boolean
          nullable: true
        openingTime:
          description: 'the opening time of the location'
          type: string
          format: date-time
          nullable: true
        closingTime:
          description: 'the closing time of the location'
          type: string
          format: date-time
          nullable: true
        accommodations:
          description: 'The accommodations in this location'
          type: array
          items:
            $ref: '#/components/schemas/Accommodation.jsonld-write'
    PlaceProperty-read:
      type: object
      description: 'A property meant as an attribute for a place'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        value:
          maxLength: 255
          description: 'placeProp value'
          type: string
        key:
          readOnly: true
          description: 'placeProp key'
          type: string
        property:
          description: 'property linked to this place property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property-read'
        place:
          description: 'place linked to this place property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Place-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - value
    PlaceProperty-write:
      type: object
      description: 'A property meant as an attribute for a place'
      required:
        - value
      properties:
        value:
          maxLength: 255
          description: 'placeProp value'
          type: string
        property:
          description: 'property linked to this place property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property-write'
        place:
          description: 'place linked to this place property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Place-write'
    PlaceProperty.jsonld-read:
      type: object
      description: 'A property meant as an attribute for a place'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        value:
          maxLength: 255
          description: 'placeProp value'
          type: string
        key:
          readOnly: true
          description: 'placeProp key'
          type: string
        property:
          description: 'property linked to this place property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property.jsonld-read'
        place:
          description: 'place linked to this place property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Place.jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - value
    PlaceProperty.jsonld-write:
      type: object
      description: 'A property meant as an attribute for a place'
      required:
        - value
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        value:
          maxLength: 255
          description: 'placeProp value'
          type: string
        property:
          description: 'property linked to this place property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Property.jsonld-write'
        place:
          description: 'place linked to this place property'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Place.jsonld-write'
    Property-read:
      type: object
      description: 'A property meant as an attribute'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Property name'
          type: string
        description:
          maxLength: 2550
          description: 'property description'
          type: string
          nullable: true
        key:
          maxLength: 200
          description: 'key of property'
          type: string
        placeProperties:
          description: 'placeProperty this property is linked to'
          type: array
          items:
            $ref: '#/components/schemas/PlaceProperty-read'
        accommodationProperties:
          description: 'accommodationProperty this property is linked to'
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - key
    Property-write:
      type: object
      description: 'A property meant as an attribute'
      required:
        - name
        - key
      properties:
        name:
          maxLength: 255
          description: 'Property name'
          type: string
        description:
          maxLength: 2550
          description: 'property description'
          type: string
          nullable: true
        key:
          maxLength: 200
          description: 'key of property'
          type: string
        placeProperties:
          description: 'placeProperty this property is linked to'
          type: array
          items:
            $ref: '#/components/schemas/PlaceProperty-write'
        accommodationProperties:
          description: 'accommodationProperty this property is linked to'
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty-write'
    Property.jsonld-read:
      type: object
      description: 'A property meant as an attribute'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'Property name'
          type: string
        description:
          maxLength: 2550
          description: 'property description'
          type: string
          nullable: true
        key:
          maxLength: 200
          description: 'key of property'
          type: string
        placeProperties:
          description: 'placeProperty this property is linked to'
          type: array
          items:
            $ref: '#/components/schemas/PlaceProperty.jsonld-read'
        accommodationProperties:
          description: 'accommodationProperty this property is linked to'
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty.jsonld-read'
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - key
    Property.jsonld-write:
      type: object
      description: 'A property meant as an attribute'
      required:
        - name
        - key
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Property name'
          type: string
        description:
          maxLength: 2550
          description: 'property description'
          type: string
          nullable: true
        key:
          maxLength: 200
          description: 'key of property'
          type: string
        placeProperties:
          description: 'placeProperty this property is linked to'
          type: array
          items:
            $ref: '#/components/schemas/PlaceProperty.jsonld-write'
        accommodationProperties:
          description: 'accommodationProperty this property is linked to'
          type: array
          items:
            $ref: '#/components/schemas/AccommodationProperty.jsonld-write'
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
